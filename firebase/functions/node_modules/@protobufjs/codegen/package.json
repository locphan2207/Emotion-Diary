{
  "_args": [
    [
      {
        "raw": "@protobufjs/codegen@^2.0.4",
        "scope": "@protobufjs",
        "escapedName": "@protobufjs%2fcodegen",
        "name": "@protobufjs/codegen",
        "rawSpec": "^2.0.4",
        "spec": ">=2.0.4 <3.0.0",
        "type": "range"
      },
      "/Users/kimvibui/Documents/Loc/EmotionDiary/firebase/functions/node_modules/google-proto-files/node_modules/protobufjs"
    ]
  ],
  "_from": "@protobufjs/codegen@>=2.0.4 <3.0.0",
  "_id": "@protobufjs/codegen@2.0.4",
  "_inCache": true,
  "_location": "/@protobufjs/codegen",
  "_nodeVersion": "8.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/codegen-2.0.4.tgz_1497041777758_0.900342388311401"
  },
  "_npmUser": {
    "name": "dcode",
    "email": "dcode+npm@dcode.io"
  },
  "_npmVersion": "5.0.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@protobufjs/codegen@^2.0.4",
    "scope": "@protobufjs",
    "escapedName": "@protobufjs%2fcodegen",
    "name": "@protobufjs/codegen",
    "rawSpec": "^2.0.4",
    "spec": ">=2.0.4 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/google-gax/protobufjs",
    "/google-proto-files/protobufjs"
  ],
  "_resolved": "https://registry.npmjs.org/@protobufjs/codegen/-/codegen-2.0.4.tgz",
  "_shasum": "7ef37f0d010fb028ad1ad59722e506d9262815cb",
  "_shrinkwrap": null,
  "_spec": "@protobufjs/codegen@^2.0.4",
  "_where": "/Users/kimvibui/Documents/Loc/EmotionDiary/firebase/functions/node_modules/google-proto-files/node_modules/protobufjs",
  "author": {
    "name": "Daniel Wirtz",
    "email": "dcode+protobufjs@dcode.io"
  },
  "bugs": {
    "url": "https://github.com/dcodeIO/protobuf.js/issues"
  },
  "dependencies": {},
  "description": "A minimalistic code generation utility.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-YyFaikqM5sH0ziFZCN3xDC7zeGaB/d0IUb9CATugHWbd1FRFwWwt4ld4OYMPWu5a3Xe01mGAULCdqhMlPl29Jg==",
    "shasum": "7ef37f0d010fb028ad1ad59722e506d9262815cb",
    "tarball": "https://registry.npmjs.org/@protobufjs/codegen/-/codegen-2.0.4.tgz"
  },
  "homepage": "https://github.com/dcodeIO/protobuf.js#readme",
  "license": "BSD-3-Clause",
  "main": "index.js",
  "maintainers": [
    {
      "name": "dcode",
      "email": "dcode@dcode.io"
    },
    {
      "name": "protobufjs",
      "email": "dcode+npm-protobufjs@dcode.io"
    }
  ],
  "name": "@protobufjs/codegen",
  "optionalDependencies": {},
  "readme": "@protobufjs/codegen\r\n===================\r\n[![npm](https://img.shields.io/npm/v/@protobufjs/codegen.svg)](https://www.npmjs.com/package/@protobufjs/codegen)\r\n\r\nA minimalistic code generation utility.\r\n\r\nAPI\r\n---\r\n\r\n* **codegen([functionParams: `string[]`], [functionName: string]): `Codegen`**<br />\r\n  Begins generating a function.\r\n\r\n* **codegen.verbose = `false`**<br />\r\n  When set to true, codegen will log generated code to console. Useful for debugging.\r\n\r\nInvoking **codegen** returns an appender function that appends code to the function's body and returns itself:\r\n\r\n* **Codegen(formatString: `string`, [...formatParams: `any`]): Codegen**<br />\r\n  Appends code to the function's body. The format string can contain placeholders specifying the types of inserted format parameters:\r\n\r\n  * `%d`: Number (integer or floating point value)\r\n  * `%f`: Floating point value\r\n  * `%i`: Integer value\r\n  * `%j`: JSON.stringify'ed value\r\n  * `%s`: String value\r\n  * `%%`: Percent sign<br />\r\n\r\n* **Codegen([scope: `Object.<string,*>`]): `Function`**<br />\r\n  Finishes the function and returns it.\r\n\r\n* **Codegen.toString([functionNameOverride: `string`]): `string`**<br />\r\n  Returns the function as a string.\r\n\r\nExample\r\n-------\r\n\r\n```js\r\nvar codegen = require(\"@protobufjs/codegen\");\r\n\r\nvar add = codegen([\"a\", \"b\"], \"add\") // A function with parameters \"a\" and \"b\" named \"add\"\r\n  (\"// awesome comment\")             // adds the line to the function's body\r\n  (\"return a + b - c + %d\", 1)       // replaces %d with 1 and adds the line to the body\r\n  ({ c: 1 });                        // adds \"c\" with a value of 1 to the function's scope\r\n\r\nconsole.log(add.toString()); // function add(a, b) { return a + b - c + 1 }\r\nconsole.log(add(1, 2));      // calculates 1 + 2 - 1 + 1 = 3\r\n```\r\n\r\n**License:** [BSD 3-Clause License](https://opensource.org/licenses/BSD-3-Clause)\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dcodeIO/protobuf.js.git"
  },
  "types": "index.d.ts",
  "version": "2.0.4"
}
