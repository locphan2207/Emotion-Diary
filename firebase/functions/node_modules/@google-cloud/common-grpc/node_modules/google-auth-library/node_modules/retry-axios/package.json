{
  "_args": [
    [
      {
        "raw": "retry-axios@^0.3.2",
        "scope": null,
        "escapedName": "retry-axios",
        "name": "retry-axios",
        "rawSpec": "^0.3.2",
        "spec": ">=0.3.2 <0.4.0",
        "type": "range"
      },
      "/Users/kimvibui/Documents/Loc/EmotionDiary/firebase/functions/node_modules/@google-cloud/common-grpc/node_modules/google-auth-library"
    ]
  ],
  "_from": "retry-axios@>=0.3.2 <0.4.0",
  "_id": "retry-axios@0.3.2",
  "_inCache": true,
  "_location": "/@google-cloud/common-grpc/google-auth-library/retry-axios",
  "_nodeVersion": "8.9.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/retry-axios_0.3.2_1519088216717_0.31579119500443675"
  },
  "_npmUser": {
    "name": "justinbeckwith",
    "email": "justin.beckwith@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "retry-axios@^0.3.2",
    "scope": null,
    "escapedName": "retry-axios",
    "name": "retry-axios",
    "rawSpec": "^0.3.2",
    "spec": ">=0.3.2 <0.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@google-cloud/common-grpc/google-auth-library"
  ],
  "_resolved": "https://registry.npmjs.org/retry-axios/-/retry-axios-0.3.2.tgz",
  "_shasum": "5757c80f585b4cc4c4986aa2ffd47a60c6d35e13",
  "_shrinkwrap": null,
  "_spec": "retry-axios@^0.3.2",
  "_where": "/Users/kimvibui/Documents/Loc/EmotionDiary/firebase/functions/node_modules/@google-cloud/common-grpc/node_modules/google-auth-library",
  "author": {
    "name": "Justin Beckwith"
  },
  "bugs": {
    "url": "https://github.com/JustinBeckwith/retry-axios/issues"
  },
  "dependencies": {},
  "description": "Retry HTTP requests with Axios.",
  "devDependencies": {
    "@types/mocha": "^2.2.48",
    "@types/nock": "^9.1.2",
    "@types/node": "^9.4.6",
    "axios": "^0.18.0",
    "codecov": "^3.0.0",
    "gts": "^0.5.3",
    "js-green-licenses": "^0.4.0",
    "mocha": "^5.0.1",
    "nock": "^9.1.6",
    "nyc": "^11.4.1",
    "source-map-support": "^0.5.3",
    "typescript": "~2.7.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-jp4YlI0qyDFfXiXGhkCOliBN1G7fRH03Nqy8YdShzGqbY5/9S2x/IR6C88ls2DFkbWuL3ASkP7QD3pVrNpPgwQ==",
    "shasum": "5757c80f585b4cc4c4986aa2ffd47a60c6d35e13",
    "tarball": "https://registry.npmjs.org/retry-axios/-/retry-axios-0.3.2.tgz",
    "fileCount": 6,
    "unpackedSize": 27863
  },
  "files": [
    "build/src",
    "LICENSE",
    "packge.json",
    "README.md"
  ],
  "gitHead": "a091b45a7e296aac980349e2eac5ef7727d4b463",
  "homepage": "https://github.com/JustinBeckwith/retry-axios#readme",
  "keywords": [
    "axios",
    "retry"
  ],
  "license": "Apache-2.0",
  "main": "./build/src/index.js",
  "maintainers": [
    {
      "name": "justinbeckwith",
      "email": "justin.beckwith@gmail.com"
    }
  ],
  "name": "retry-axios",
  "nyc": {
    "exclude": [
      "build/test"
    ]
  },
  "optionalDependencies": {},
  "peerDependencies": {
    "axios": "*"
  },
  "readme": "# retry-axios\n\n[![NPM Version][npm-image]][npm-url]\n[![CircleCI][circle-image]][circle-url]\n[![Dependency Status][david-image]][david-url]\n[![devDependency Status][david-dev-image]][david-dev-url]\n[![Known Vulnerabilities][snyk-image]][snyk-url]\n[![codecov][codecov-image]][codecov-url]\n[![Greenkeeper badge][greenkeeper-image]][greenkeeper-url]\n[![style badge][gts-image]][gts-url]\n\nUse Axios interceptors to automatically retry failed requests.  Super flexible. Built in exponential backoff.\n\n## Installation\n\n``` sh\nnpm install retry-axios\n```\n\n## Usage\n\nTo use this library, import it alongside of `axios`:\n\n```js\n// Just import rax and your favorite version of axios\nconst rax = require('retry-axios');\nconst {axios} = require('axios');\n```\n\nYou can attach to the global `axios` object, and retry 3 times by default:\n\n```js\nconst interceptorId = rax.attach();\nconst res = await axios('https://test.local');\n```\n\nOr you can create your own axios instance to make scoped requests:\n\n```js\nconst myAxiosInstance = axios.create();\nmyAxiosInstance.defaults = {\n  raxConfig: {\n    instance: myAxiosInstance\n  }\n}\nconst interceptorId = rax.attach(myAxiosInstance);\nconst res = await myAxiosInstance.get('https://test.local');\n```\n\nYou have a lot of options...\n\n```js\nconst interceptorId = rax.attach();\nconst res = await axios({\n  url: 'https://test.local',\n  raxConfig: {\n    // Retry 3 times on requests that return a response (500, etc) before giving up.  Defaults to 3.\n    retry: 3,\n\n    // Retry twice on errors that don't return a response (ENOTFOUND, ETIMEDOUT, etc).\n    noResponseRetries: 2,\n\n    // Milliseconds to delay at first.  Defaults to 100.\n    retryDelay: 100,\n\n    // HTTP methods to automatically retry.  Defaults to:\n    // ['GET', 'HEAD', 'OPTIONS', 'DELETE', 'PUT']\n    httpMethodsToRetry: ['GET', 'HEAD', 'OPTIONS', 'DELETE', 'PUT'],\n\n    // The response status codes to retry.  Supports a double\n    // array with a list of ranges.  Defaults to:\n    // [[100, 199], [429, 429], [500, 599]]\n    httpStatusCodesToRetry: [[100, 199], [429, 429], [500, 599]],\n\n    // If you are using a non static instance of Axios you need\n    // to pass that instance here (const ax = axios.create())\n    instance: ax,\n\n    // You can detect when a retry is happening, and figure out how many\n    // retry attempts have been made\n    onRetryAttempt: (err) => {\n      const cfg = rax.getConfig(err);\n      console.log(`Retry attempt #${cfg.currentRetryAttempt}`);\n    }\n  }\n});\n```\n\nOr if you want, you can just decide if it should retry or not:\n\n```js\nconst res = await axios({\n  url: 'https://test.local',\n  raxConfig: {\n    // Override the decision making process on if you should retry\n    shouldRetry: (err) => {\n      const cfg = rax.getConfig(err);\n      return true;\n    }\n  }\n});\n```\n\n## How it works\n\nThis library attaches an `interceptor` to an axios instance you pass to the API.  This way you get to choose which version of `axios` you want to run, and you can compose many interceptors on the same request pipeline.\n\n## License\n[Apache-2.0](LICENSE)\n\n[circle-image]: https://circleci.com/gh/JustinBeckwith/retry-axios.svg?style=svg\n[circle-url]: https://circleci.com/gh/JustinBeckwith/retry-axios\n[codecov-image]: https://codecov.io/gh/JustinBeckwith/retry-axios/branch/master/graph/badge.svg\n[codecov-url]: https://codecov.io/gh/JustinBeckwith/retry-axios\n[david-image]: https://david-dm.org/JustinBeckwith/retry-axios.svg\n[david-url]: https://david-dm.org/JustinBeckwith/retry-axios\n[david-dev-image]: https://david-dm.org/JustinBeckwith/retry-axios/dev-status.svg\n[david-dev-url]: https://david-dm.org/JustinBeckwith/retry-axios?type=dev\n[greenkeeper-image]: https://badges.greenkeeper.io/JustinBeckwith/retry-axios.svg\n[greenkeeper-url]: https://greenkeeper.io/\n[gts-image]: https://img.shields.io/badge/code%20style-Google%20%E2%98%82%EF%B8%8F-blue.svg\n[gts-url]: https://www.npmjs.com/package/gts\n[npm-image]: https://img.shields.io/npm/v/retry-axios.svg\n[npm-url]: https://npmjs.org/package/retry-axios\n[snyk-image]: https://snyk.io/test/github/JustinBeckwith/retry-axios/badge.svg\n[snyk-url]: https://snyk.io/test/github/JustinBeckwith/retry-axios\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/JustinBeckwith/retry-axios.git"
  },
  "scripts": {
    "check": "gts check",
    "clean": "gts clean",
    "codecov": "nyc report --reporter=json && codecov -f coverage/*.json",
    "compile": "tsc -p .",
    "fix": "gts fix",
    "license-check": "jsgl --local .",
    "posttest": "npm run check && npm run license-check",
    "prepare": "npm run compile",
    "pretest": "npm run compile",
    "test": "nyc mocha build/test --timeout 5000 --require source-map-support/register"
  },
  "types": "./build/src/index.d.ts",
  "version": "0.3.2"
}
